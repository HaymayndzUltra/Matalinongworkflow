[
  {
    "id": "stabilize_kyc_face_system_fix_unit_failures_and_build_comprehensive_test_suites_actionable_20250816",
    "description": "Stabilize KYC Face System: Fix Unit Failures and Build Comprehensive Test Suites (memory-bank/plan/organize.md)",
    "todos": [
      {
        "text": "PHASE 0: SETUP & PROTOCOL (READ FIRST)\n\n**Explanations:**\nUse Python 3.10. Run tests with PYTHONPATH=\"KYC VERIFICATION/src\". Scope: Stabilize KYC Face system by fixing unit failures, adding sync shims for legacy tests, and expanding test suites per the source plan. After all changes, execute unit, integration, performance, and smoke suites non-interactively.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 0\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Do not directly edit queue/state files; this phase defines protocol and environment only. Keep APIs stable; changes are compatibility-focused. Test runs must use the provided master suite commands.",
        "done": true
      },
      {
        "text": "PHASE 1: SESSION STATE & MANAGER COMPATIBILITY\n\n**Explanations:**\nExpose EnhancedSessionState.current_state as an alias of capture_state. Provide SessionManager.create_session(session_id) alias to get_or_create_session. Ensure timing metadata remains backward-compatible (flat keys alongside structured map).\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 1\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] No behavioral changes to the state machine; only aliases and metadata flattening. Maintain thread-safety for manager operations.",
        "done": false
      },
      {
        "text": "PHASE 2: QUALITY GATES TUNING & LEGACY ALIASES\n\n**Explanations:**\nNormalize focus scores from 0..10 to 0..1. Map cancel reasons for legacy expectations: motion → CancelReason.MOTION_BLUR; focus → CancelReason.OUT_OF_FOCUS. Ensure \"excellent\" quality is reachable in the provided good metrics example; adjust mapping/weights so weighted score ≥ 0.90 yields QualityLevel.EXCELLENT (without relaxing cancel thresholds).\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 2\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Keep response time target (<50ms) unchanged. Do not relax cancel thresholds; only normalize input and add alias mapping.",
        "done": false
      },
      {
        "text": "PHASE 3: EXTRACTION PROCESSOR API COMPAT\n\n**Explanations:**\nextract_document(image_data, session_id=None, ...) must accept optional session_id and return a dict; flatten fields to a list of dicts with confidence. Implement _get_confidence_color(conf) with boundaries: ≥0.85 green; >0.60 amber; else red (0.60 is red). Ensure broadcasting uses send_event(session_id, event_type, data) and does not crash if streaming is unavailable.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 3\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Do not change field semantics or confidence calculation, only output shape and helper color mapping.",
        "done": false
      },
      {
        "text": "PHASE 4: STREAMING MANAGER ASYNC + SYNC FACADES\n\n**Explanations:**\nKeep async API: create_connection_async(session_id, last_event_id=None) and send_event(session_id, event_type, data, retry_after=None). Add sync facades for tests: create_connection(session_id, last_event_id=None) runs the async variant in a loop; send_event_sync(session_id, event) accepts a dict with type and data. Add active_connections in get_connection_stats(). Avoid recursion between sync and async variants.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 4\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Ensure sync wrappers call the async-named methods; do not shadow async signatures.",
        "done": false
      },
      {
        "text": "PHASE 5: BIOMETRICS SHIMS & API FLEXIBILITY\n\n**Explanations:**\nAdd sync shim methods: match_faces(reference_face, live_face) -> {\"match_score\": float, \"passed\": bool} and detect_presentation_attack(face_data) -> {\"pad_score\": float, \"is_live\": bool}. Extend process_biometrics(session, burst_frames=None, reference_image=None, live_image=None) for optional args and provide process_biometrics_sync(...) using asyncio.run.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 5\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Keep thresholds MATCH 0.85 and PAD 0.90; shims must not weaken accuracy semantics used by real components.",
        "done": false
      },
      {
        "text": "PHASE 6: MESSAGES LEGACY KEY MAP\n\n**Explanations:**\nMap legacy keys expected by tests: lock_acquired ⇒ locked state message (Tagalog must contain \"Steady\"); quality_motion ⇒ motion error; quality_focus ⇒ focus error; quality_glare, quality_corners, quality_partial accordingly. Ensure Tagalog/English fallback remains intact.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 6\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Do not remove existing keys; add a deterministic legacy→modern mapping layer.",
        "done": false
      },
      {
        "text": "PHASE 7: BUILD ADDITIONAL TEST SUITES\n\n**Explanations:**\nAdd tests under KYC VERIFICATION/tests/: Unit: test_messages_legacy_keys.py, test_streaming_sync_facade.py, test_biometrics_sync_shims.py, test_extraction_outputs.py; Integration: test_capture_flow_extended.py; Performance: extend existing performance suite for streaming stats and cancel-on-jitter timing; Security: threshold bounds checks, rate limiter behavior, session TTL cleanup.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 7\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] Tests must be deterministic, non-networked, and avoid long sleeps; preserve current suite entrypoints.",
        "done": false
      },
      {
        "text": "PHASE 8: EXECUTE FULL TEST MATRIX\n\n**Explanations:**\nNon-interactive runs:\n- python3 -V\n- pip install -r requirements.txt -q || true\n- PYTHONPATH=\"KYC VERIFICATION/src\" python3 \"KYC VERIFICATION/tests/test_suite_master.py\" --suite unit\n- PYTHONPATH=\"KYC VERIFICATION/src\" python3 \"KYC VERIFICATION/tests/test_suite_master.py\" --suite integration\n- PYTHONPATH=\"KYC VERIFICATION/src\" python3 \"KYC VERIFICATION/tests/test_suite_master.py\" --suite performance\n- PYTHONPATH=\"KYC VERIFICATION/src\" python3 \"KYC VERIFICATION/tests/test_suite_master.py\" --suite smoke\nEnsure exit code 0 for the master suite.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 8\n```\nIMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] All tests must pass; no linter errors; avoid API regressions; keep diffs minimal with clear commit messages.",
        "done": false
      }
    ],
    "status": "in_progress",
    "created": "2025-08-16T00:00:00+08:00",
    "updated": "2025-08-17T03:57:09.863680+08:00"
  }
]