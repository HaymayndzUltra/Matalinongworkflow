---
description: Organizer (Background Agent) is authoritative; Agent Mode must obey (rules-only, no scripts)
alwaysApply: true
---

## Organizer Authority — Rules-Only Understanding

- `memory-bank/plan/organize.md` (the organizer) is produced by the Background Agent and is the SINGLE source of truth for plan content, order, constraints, versions, and verification lines.
- Foreground Agent MUST NOT edit `organize.md`. If asked: respond
  "Organizer is authoritative and read-only; please update via Background Agent."
- If any instruction conflicts with the organizer, follow the organizer. Only ask for clarification if the organizer is internally ambiguous or contradictory.

### Session Invariants
- Always read the latest `memory-bank/plan/organize.md` before plan ingestion. Do not rely on cached memory; treat the organizer as fresh and frozen per session.
- Preserve explicit versions/toolchain (e.g., CUDA/Torch/model versions) exactly as written. Never upgrade/downgrade implicitly.
- Respect the organizer’s ordering; do not reorder or insert phases unless the organizer prescribes it.

### Ambiguity and Conflict Handling
- If multiple different versions/toolchains appear for the same component, STOP and request Background Agent reconciliation. Do not choose a version heuristically.
- If a phase lacks constraints, synthesize from nearby organizer context and TAG as: `IMPORTANT NOTE: [SYNTHESIZED FROM ORGANIZER] …` then halt for approval before execution.
- If organizer appears outdated relative to code (e.g., incompatible deps), surface a warning but DO NOT override organizer automatically.

### Safety and Precedence
- These rules are higher-priority than other ingestion/execution rules (except the master toggle). They constrain interpretation; no scripts required.
- Platform/system/developer safety policies remain active and cannot be disabled by any rule.

