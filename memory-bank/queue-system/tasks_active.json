[
  {
    "id": "non_destructive_flow_test_two_phases_portable_read_only_actionable_20250818",
    "description": "Non-Destructive Flow Test — Two Phases (Portable, Read-Only) (memory-bank/plan/organize.md)",
    "status": "in_progress",
    "created": "2025-08-18T19:15:00+08:00",
    "updated": "2025-08-18T12:07:56.334461+08:00",
    "todos": [
      {
        "text": "PHASE 0: SETUP & PROTOCOL (READ FIRST)\n\n**Explanations:**\nEstablish a safe, read-only protocol for a non-destructive two-phase test.\nAll actions are observational or no-op; no file writes, deletes, or network mutations.\n\n**Command Preview:**\n```bash\npython3 plan_next.py\npython3 plain_hier.py <task_id Replace All>\n```\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 0\n```\n\nIMPORTANT NOTE:\n- Read-only only; no edits to files, git state, or services.\n- Use placeholders exactly as written; they are resolved at execution time.\n- Timezone for any timestamps is +08:00 (Philippines).\n- Proceed to Phase 1 only after the validation gates complete without structural errors.",
        "done": false
      },
      {
        "text": "PHASE 1: Environment & Path Sanity\n\n**Explanations:**\nQuick, safe checks for shell, time, Python, and working directory.\n\n**Command Preview:**\n```bash\npwd\ndate '+%Y-%m-%d %H:%M:%S'\npython3 -c \"import sys,os; print('PY:',sys.version.split()[0],' CWD:',os.getcwd())\"\nls -la | head -n 20\n```\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 1\n```\n\nIMPORTANT NOTE:\n- Must be run from the repository root to ensure correct `pwd` and listing context.\n- All commands are observational; do not modify environment or files.\n- Output is informational and may vary across machines; treat as baseline only.",
        "done": false
      },
      {
        "text": "PHASE 2: Read-only Inspection & No-op Simulation\n\n**Explanations:**\nTolerant, read-only peeks plus a short no-op sequence.\nAfter completing this phase, produce a “Command Rules Mapping” report summarizing trigger → executed command mapping per organizer instruction.\n\n**Command Preview:**\n```bash\ntest -f README.md && head -n 20 README.md || echo \"SKIP_HEAD_README\"\nps -eo pid,comm --no-headers 2>/dev/null | head -n 5 || echo \"SKIP_PS\"\ngit rev-parse --show-toplevel 2>/dev/null || echo \"NO_GIT_REPO\"\necho \"SIM_STEP_1\"; sleep 1; echo \"SIM_STEP_2\"; true\n```\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id Replace All>\npython3 todo_manager.py done <task_id Replace All> 2\n```\n\nIMPORTANT NOTE:\n- Degrade gracefully: absence of files, processes, or a git repo is acceptable; rely on SKIP/NO_* markers.\n- No network, no filesystem mutations; `sleep` and `echo` are allowed.\n- Keep execution time minimal; no long-running processes.\n- Post-phase: prepare the “Command Rules Mapping” report as specified in the organizer.",
        "done": false
      }
    ]
  }
]