[
  {
    "id": "docker_arch_blueprint_actionable_20250818",
    "description": "Actionable plan compiled from FINAL Docker Architecture Blueprint (memory-bank/plan/organize.md).",
    "status": "in_progress",
    "created": "2025-08-18T20:00:00+08:00",
    "updated": "2025-08-18T20:00:00+08:00",
    "todos": [
      {
        "text": "PHASE 0: SETUP & PROTOCOL (READ FIRST)\n\n**Explanations:**\nPrepared from the frozen organizer. Execution uses only whitelisted commands; no direct edits to queue/state files. Validate each phase with read-only gates before running anything. Images follow GHCR tagging `ghcr.io/<org>/<family>:YYYYMMDD-<git_sha>`, reproducible builds (pinned apt/pip with --require-hashes), non-root UID:GID 10001:10001, and tini as PID 1. GPU baseline uses CUDA 12.1 with TORCH_CUDA_ARCH_LIST=\"89;86\" and machine-profile via `--build-arg MACHINE={mainpc|pc2}`.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: No direct file writes by the agent; timestamps in +08:00; enforce non-root + tini; keep CI gating and SBOM; follow GHCR tag scheme; hardware-aware defaults apply for GPU images.",
        "done": false
      },
      {
        "text": "PHASE 1: Build Functional-Family Base Images\n\n**Explanations:**\nCreate/refresh the base image hierarchy (§B, §E patterns): base-python:3.11-slim ➜ base-utils ➜ base-cpu-pydeps/family-web and base-gpu-cu121 ➜ family-torch-cu121/family-vision-cu121/family-llm-cu121; include legacy-py310-cpu only where needed. Multi-stage builds (builder+runtime) with pinned apt/pip and reproducible layers.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: Tag images `YYYYMMDD-<git_sha>` on GHCR; use buildx with registry cache; pip `--require-hashes`; ensure tini + non-root; GPU families inherit CUDA 12.1 only.",
        "done": false
      },
      {
        "text": "PHASE 2: Dependency Audit (Audio/Vision)\n\n**Explanations:**\nPerform static code scan + ldd enumeration to list required system libraries for audio/vision (e.g., ffmpeg, libpulse). Add only to GPU-oriented families (family-torch-cu121/family-vision-cu121) if strictly required.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: CPU families must remain lean; modify only targeted GPU families; keep pinned versions and locked layers.",
        "done": false
      },
      {
        "text": "PHASE 3: Extend CI Pipeline (Matrix, Cache, Trivy, SBOM)\n\n**Explanations:**\nUpdate GitHub Actions matrix (family × machine). Use buildx with `--cache-to/from type=registry,ref=ghcr.io/<org>/cache`. Run Trivy and fail pipeline on HIGH/CRITICAL; upload SBOM (SPDX) for each image.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: CI artifacts (SBOM) must align with tag scheme; Trivy gate enforced (HIGH/CRITICAL=fail); no unpinned installs.",
        "done": false
      },
      {
        "text": "PHASE 4: Service Migration — Phase 1 (Core Infra)\n\n**Explanations:**\nMigrate core infra services to their new base families per coverage table (§F). Verify health endpoints `/health` return `{status:\"ok\"}` HTTP 200 and ports match the table.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: Use only images built in earlier phases; keep non-root+tini; confirm health endpoints and port mappings; maintain tag fidelity.",
        "done": false
      },
      {
        "text": "PHASE 5: Service Migration — Phase 2 (GPU services on MainPC)\n\n**Explanations:**\nMigrate GPU/LLM/Audio/Vision services on MainPC (4090) to CUDA 12.1 families; ensure `MACHINE=mainpc` defaults and GPU envs (e.g., `GPU_VISIBLE_DEVICES=0`, arch list) are correct.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: Respect hardware-aware defaults; verify CUDA arch flags; confirm health endpoints; avoid adding GPU deps to CPU images.",
        "done": false
      },
      {
        "text": "PHASE 6: Service Migration — Phase 3 (CPU services on PC2)\n\n**Explanations:**\nMigrate CPU services on PC2 (3060 host) to base-cpu-pydeps/family-web as appropriate; set `MACHINE=pc2` and confirm resource knobs from the machine profile.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: Keep images lean; confirm ports & health endpoints; ensure no GPU dependencies are pulled into CPU images.",
        "done": false
      },
      {
        "text": "PHASE 7: Observability Integration\n\n**Explanations:**\nEmit image SBOM digest and Git SHA to UnifiedObservabilityCenter at service startup for traceability.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: Observability payload must include image tag, SBOM digest, and git SHA; do not include secrets.",
        "done": false
      },
      {
        "text": "PHASE 8: Rollback Procedure Readiness\n\n**Explanations:**\nMaintain previous images with `-prev` tag; supervisors can pin via `FORCE_IMAGE_TAG`. Validate that rollback works for both GPU and CPU services.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <TASK_ID>\npython3 todo_manager.py done <TASK_ID> <PHASE_INDEX>\n```\n\nIMPORTANT NOTE: Keep prior image availability; document the pinning mechanism; ensure services remain non-root and health endpoints valid after rollback.",
        "done": false
      }
    ]
  }
]